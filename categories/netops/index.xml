<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>netops on overloaded bits</title>
    <link>/categories/netops/</link>
    <description>Recent content in netops on overloaded bits</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Sep 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/netops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ansible tips, tricks and notes</title>
      <link>/netops/ansible/tricks/</link>
      <pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/netops/ansible/tricks/</guid>
      <description> Remove key from dictionary Takes hostvars for the given inventory_hostname and reconstructs it without the groups key
- set_fact: dict: {} - set_fact: dict: &amp;quot;{{ dict | combine({item.key: item.value}) }}&amp;quot; when: item.key not in [&#39;groups&#39;] with_dict: &amp;quot;{{hostvars[inventory_hostname]}}&amp;quot; - debug: msg: &amp;quot;{{dict}}&amp;quot;  </description>
    </item>
    
    <item>
      <title>Junos/Ansible basics</title>
      <link>/netops/ansible/ansible-w-junos/</link>
      <pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/netops/ansible/ansible-w-junos/</guid>
      <description>Disclaimer: may be outdated
Retrieve config Using Galaxy module:
 - name: Retrieve the interface configuration using Galaxy module juniper_junos_config: retrieve: &#39;committed&#39; filter: &#39;&amp;lt;interfaces&amp;gt;&amp;lt;interface&amp;gt;&amp;lt;name&amp;gt;{{interface}}&amp;lt;/name&amp;gt;&amp;lt;unit&amp;gt;&amp;lt;name&amp;gt;{{unit}}&amp;lt;/name&amp;gt;&amp;lt;/unit&amp;gt;&amp;lt;/interface&amp;gt;&amp;lt;/interfaces&amp;gt;&#39; diff: true check: false commit: false format: xml register: iface_info  Using netconf_get module:
- name: Retrieve the interface configuration using netconf_get module netconf_get: source: running filter: &#39;&amp;lt;configuration&amp;gt;&amp;lt;interfaces&amp;gt;&amp;lt;interface&amp;gt;&amp;lt;name&amp;gt;{{interface}}&amp;lt;/name&amp;gt;&amp;lt;unit&amp;gt;&amp;lt;name&amp;gt;{{unit}}&amp;lt;/name&amp;gt;&amp;lt;/unit&amp;gt;&amp;lt;/interface&amp;gt;&amp;lt;/interfaces&amp;gt;&amp;lt;/configuration&amp;gt;&#39; # filter: &#39;&amp;lt;configuration&amp;gt;&amp;lt;interfaces&amp;gt;&amp;lt;interface[name=&amp;quot;ge-0/0/6&amp;quot;]&amp;gt;&amp;lt;/interface&amp;gt;&amp;lt;/interfaces&amp;gt;&amp;lt;/configuration&amp;gt;&#39; register: iface_info  Note: Junos doesnt support xpath filtering in get-config operation</description>
    </item>
    
    <item>
      <title>Ansible timestamps</title>
      <link>/netops/ansible/working-with-timestamp/</link>
      <pubDate>Thu, 18 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/netops/ansible/working-with-timestamp/</guid>
      <description>Timestamps in Ansible Using facts (gather_facts cannot be False):
 tasks: - name: Ansible date fact example debug: var=ansible_date_time.date  Using local time via lookup:
- hosts: all tasks: - debug: msg=&amp;quot;{{ lookup(&#39;pipe&#39;,&#39;date&#39;) }}&amp;quot;  or rather formatted:
- hosts: all tasks: - debug: msg=&amp;quot;{{ lookup(&#39;pipe&#39;,&#39;date +%Y-%m-%d-%H-%M-%S&#39;) }}  Reference of other facts:
&amp;quot;date&amp;quot;: &amp;quot;2017-07-27&amp;quot;, &amp;quot;day&amp;quot;: &amp;quot;27&amp;quot;, &amp;quot;epoch&amp;quot;: &amp;quot;1501173540&amp;quot;, &amp;quot;hour&amp;quot;: &amp;quot;22&amp;quot;, &amp;quot;iso8601&amp;quot;: &amp;quot;2017-07-27T16:39:00Z&amp;quot;, &amp;quot;iso8601_basic&amp;quot;: &amp;quot;20170727T220900129160&amp;quot;, &amp;quot;iso8601_basic_short&amp;quot;: &amp;quot;20170727T220900&amp;quot;, &amp;quot;iso8601_micro&amp;quot;: &amp;quot;2017-07-27T16:39:00.129240Z&amp;quot;, &amp;quot;minute&amp;quot;: &amp;quot;09&amp;quot;, &amp;quot;month&amp;quot;: &amp;quot;07&amp;quot;, &amp;quot;second&amp;quot;: &amp;quot;00&amp;quot;, &amp;quot;time&amp;quot;: &amp;quot;22:09:00&amp;quot;, &amp;quot;tz&amp;quot;: &amp;quot;IST&amp;quot;, &amp;quot;tz_offset&amp;quot;: &amp;quot;+0530&amp;quot;, &amp;quot;weekday&amp;quot;: &amp;quot;Thursday&amp;quot;, &amp;quot;weekday_number&amp;quot;: &amp;quot;4&amp;quot;, &amp;quot;weeknumber&amp;quot;: &amp;quot;30&amp;quot;, &amp;quot;year&amp;quot;: &amp;quot;2017&amp;quot;  Sources and References http://www.</description>
    </item>
    
    <item>
      <title>Git Panic Commands</title>
      <link>/netops/git/panic_buttons/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/netops/git/panic_buttons/</guid>
      <description>What to do when you screw up in GIT Consult this link: Oh shit, GIT
Especially git reflog and git reset HEAD@{index}.
If needed to restore the entire working directory you can for example delete everything (but not the .git repo) and do git reset --hard to rebuild the working directory.</description>
    </item>
    
    <item>
      <title>Python Virtual Enviroments</title>
      <link>/netops/python/python-virtualenvs/</link>
      <pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/netops/python/python-virtualenvs/</guid>
      <description>Using mkvirtualenv w/ Python 3
mkvirtualenv --python=/usr/bin/python3 nameOfEnvironment  </description>
    </item>
    
    <item>
      <title>Python basics</title>
      <link>/netops/python/python-basics/</link>
      <pubDate>Fri, 06 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>/netops/python/python-basics/</guid>
      <description> test </description>
    </item>
    
  </channel>
</rss>